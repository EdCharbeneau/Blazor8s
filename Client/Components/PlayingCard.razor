<div class="pcard @CssFaceDown" @onclick="HandleClick">
    <div class="suit-top">@Value @Suit</div>
    <div class="middle-pips">
        @if (ShowPips)
        {
            @for (int i = 0; i < (int)Card.Value; i++)
            {
                <span class="pip">@Suit</span>
            }
        } else {
            <span class="pip face-card-pip">@Suit</span>
        }
    </div>
    <div class="suit-bottom">@Value @Suit</div>
</div>

@code {

    [Parameter] public bool IsFaceDown { get; set; }
    [Parameter] public Card Card { get; set; }
    string Value => ToDisplayValue(Card.Value);
    string Suit => ToSymbol(Card.Suit);
    bool ShowPips => Card.Value != CardValue.Ace && Card.Value < CardValue.Jack;

    string ToSymbol(CardSuit suits) => suits switch
    {
        CardSuit.Clubs => "♣",
        CardSuit.Spades => "♠",
        CardSuit.Hearts => "♥",
        CardSuit.Diamonds => "♦",
        _ => ""
    };

    string ToDisplayValue(CardValue value)
    {
        bool isFaceCard = value == CardValue.Ace || value > CardValue.Ten;
        return isFaceCard ? value.ToString()[0].ToString() : ((int)value).ToString();
    }

    string CssFaceDown => IsFaceDown ? "back" : null;

    void HandleClick()
    {
        IsFaceDown = !IsFaceDown;
    }
}