@page "/table"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@implements IAsyncDisposable

@if (HasJoinedGame)
{
    <h1>Joined Game</h1>
}

<div class="row">
    <div class="col">
        <h1>Players</h1>
        <ul class="list-group">
            @foreach (var player in players)
            {
                <li class="list-group-item">@player</li>
            }
        </ul>
    </div>
    <div class="col">
        <h1>Draw Pile</h1>

        <div class="pcard back">
            <span>@deck.Count()</span>
        </div>
    </div>
    <div class="col">
        <h1>Discard Pile</h1>
        <PlayingCard Card="singleCard"></PlayingCard>
    </div>
</div>

@code {    

    List<string> players = new();
    private HubConnection hubConnection;
    bool HasJoinedGame = false;
    public bool IsConnected => hubConnection.State == HubConnectionState.Connected;
    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
              .WithUrl(NavigationManager.ToAbsoluteUri("/gamehub"))
              .Build();

        hubConnection.On("JoinedGame", () =>
        {
            HasJoinedGame = true;
            StateHasChanged();
        });

        hubConnection.On<string>(nameof(IGameHub.PlayerJoined), PlayerJoined); 

        await hubConnection.StartAsync();

        await hubConnection.SendAsync("TableJoinGame");

    }

    void PlayerJoined(string player) {
        players.Add(player);
        StateHasChanged();
    }

    Card singleCard = new Card(CardValue.Ace, CardSuit.Clubs);

    List<Card> deck = CardUtilities.CreateDeck().Shuffle();
    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}